@model IEnumerable<TipoCuenta>
@{
    ViewData["Title"] = "Tipos cuentas";
}

<div class="container">
    <h1>Tipos de cuentas</h1>
    <h5>El tipo de cuenta se refiere a cómo podemos agrupar cuentas.
        Ejemplo: préstamos, tarjetas de crédito, etc
    </h5>
    <a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

    <table class="table">
        <thead>
            <tr>
                <th>Acciones</th>
                <th>Nombre</th>
            </tr>
        </thead>
        <tbody id="reordenable">
            @foreach(var tipoCuenta in Model){
                <tr>
                    <td>
                        <input type="hidden" value="@tipoCuenta.Id" class="ids" />
                        <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                        <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                    </td>
                    <td>@tipoCuenta.Nombre</td>
                </tr>
            }
        </tbody>
    </table>

</div>

@section Scripts{
    <script>

        const urlOrdenar = '@Url.Action("ordenar")';


        $(function(){
            $("#reordenable").sortable({
                // Stop significa que cuando termine de arrastrar llama a la funcion
                stop: async function(e, ui){
                    await actualizarOrdenes();
                }
            });

            async function actualizarOrdenes(){
                const ids = obtenerIdsDeElementos();
                await enviarIdsAlBackend(ids);
            } 

            function obtenerIdsDeElementos(){
                // La clase ids que agregue como un input hidden en cada fila de la tabla
                const ids = $(".ids").map(function(){   // En cada uno de los hiddens
                    // Retorno su valor
                    return $(this).val();
                }).get(); // Y lo transformo en un arreglo

                return ids; // Retorno el arreglo
            }

            async function enviarIdsAlBackend(ids){
                // Transformo los ids en json
                var data = JSON.stringify(ids);
                 
                await fetch(urlOrdenar, {
                    method: 'POST',
                    body: data,
                    headers:{
                        'Content-Type' : 'application/json'
                    }
                })
            }
        })
    </script>
}
